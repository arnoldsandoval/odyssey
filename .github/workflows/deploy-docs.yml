name: Deploy Documentation

on:
  pull_request:
    branches:
      - master
      - develop
      - "release/**"
jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # - uses: actions/cache@v2
      #   with:
      #     path: '**/node_modules'
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # - name: Configure AWS
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Set $SHA7
      #   run: echo "SHA7=$(git rev-parse --short ${{ github.event.pull_request.head.sha || github.sha }})" >> $GITHUB_ENV

      # - name: Set $PREVIEW_URL
      #   run: echo "PREVIEW_URL="https://${SHA7}.ods.dev"" >> $GITHUB_ENV

      # - name: Set COMMIT_MSG
      #   run: echo "COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV

      # - name: Install dependencies
      #   run: yarn

      # - name: Run Tests
      #   run: ./node_modules/lerna/cli.js run test

      # - name: Build Docs Site
      #   run: yarn workspace @okta/design-docs build

      # - uses: bobheadxi/deployments@v0.4.2
      #   id: deployment
      #   with:
      #     step: start
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     env: preview
      #     ref: ${{ github.head_ref }}

      # - name: 'Publish to ods.dev'
      #   run: |
      #     aws s3 sync ./packages/docs/dist/ s3://ods.dev/$SHA7 --delete

      # - uses: bobheadxi/deployments@v0.4.2
      #   if: always()
      #   with:
      #     step: finish
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     status: ${{ job.status }}
      #     deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      #     env_url: ${{ env.PREVIEW_URL }}

      # - name: Update #odyssey-deployments
      #   run: sh ./scripts/notify-slack.sh
      #   env:
      #     INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     AUTHOR_NAME: ${{github.actor}}
      #     BRANCH_NAME: ${{github.head_ref}}
      #     PULL_REQUEST_ID: ${{github.event.pull_request.number}}
